gfx_open: function void (width: integer, height: integer, title: string);
gfx_point: function void (x: integer, y: integer);
gfx_line: function void (x1: integer, y1: integer, x2: integer, y2: integer);
gfx_color: function void (red: integer, green: integer, blue: integer);
gfx_clear: function void (void);
gfx_clear_color: function void (red: integer, green: integer, blue: integer);
gfx_wait: function char (void);
gfx_xpos: function integer (void);
gfx_ypos: function integer (void);
gfx_xsize: function integer (void);
gfx_ysize: function integer (void);
gfx_event_waiting: function boolean (void);
gfx_flush: function integer (void);
usleep: function void (usecs: integer);
rand: function integer (void);
draw_box: function void (x: integer, y: integer, size: integer) = {
  gfx_color(255, 255, 255);
  gfx_line(x, y, x + size, y);
  gfx_line(x + size, y, x + size, y + size);
  gfx_line(x + size, y + size, x, y + size);
  gfx_line(x, y + size, x, y);
}

main: function integer (void) = {
  precision: integer = 100;
  xsize: integer = 500;
  ysize: integer = 500;
  x: integer = (precision * xsize) / 2;
  y: integer = (precision * ysize) / 2;
  vx: integer = precision * 3;
  vy: integer = precision * -5;
  deltat: integer = 100;
  gfx_open(xsize, ysize, "Bounce!");
  for ( ; ; ) {
    print "x: ", x, " y: ", y, " vx: ", vx, " vy: ", vy, "\n";
    if (gfx_event_waiting()) {
      c: char;
      c = gfx_wait();
      if (c == 'q') {
        return 0;
      }
      x = (gfx_xpos()) * precision;
      y = (gfx_ypos()) * precision;
      vx = 5 * precision;
    }
    vy = vy + (1 * precision);
    if ((x < 0) && (vx < 0)) {
      vx = (-9 * vx) / 10;
    }
    if ((x > (xsize * precision)) && (vx > 0)) {
      vx = (-9 * vx) / 10;
    }
    if ((y > (ysize * precision)) && (vy > 0)) {
      vy = (-9 * vy) / 10;
    }
    x = x + ((vx * deltat) / precision);
    y = y + ((vy * deltat) / precision);
    gfx_clear();
    draw_box(x / precision, y / precision, 25);
    gfx_flush();
    usleep(deltat * precision);
  }
}
